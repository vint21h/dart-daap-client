name: "check"
on:
  workflow_dispatch:
  workflow_call:
env:
  DEFAULT_PYTHON_VERSION: "3.11"
jobs:
  check:
    name: "check"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        sdk:
          - "stable"
          - "beta"
          - "dev"
    steps:
      - name: "Git clone"
        id: "git-clone"
        uses: "actions/checkout@v3.4.0"
      - name: "Set up Python ${{ env.DEFAULT_PYTHON_VERSION }}"
        id: "set-up-python"
        uses: "actions/setup-python@v4.5.0"
        with:
          python-version: "${{ env.DEFAULT_PYTHON_VERSION }}"
      - name: "Pipenv cache"
        id: "pipenv-cache"
        uses: "actions/cache@v3.2.5"
        with:
          path: "~/.cache/pipenv"
          key: "${{ runner.os }}-pipenv-${{ hashFiles('Pipfile') }}"
          restore-keys: |
            "${{ runner.os }}-pipenv-"
      - name: "Set up Dart ${{ matrix.sdk }}"
        id: "set-up-dart"
        uses: "dart-lang/setup-dart@v1.4"
        with:
          sdk: "${{ matrix.sdk }}"
      - name: "Pub cache"
        id: "pub-cache"
        uses: "actions/cache@v3.2.5"
        with:
          path: "~/.pub-cache"
          key: "${{ runner.os }}-pub-${{ matrix.sdk }}-${{ hashFiles('pubspec.yaml') }}"
          restore-keys: |
            "${{ runner.os }}-pub-${{ matrix.sdk }}-"
            "${{ runner.os }}-pub-"
      - name: "Install requirements"
        id: "install-requirements"
        run: |
          pip install pipenv
          make pipenv-install
          make pub-install
      - name: "Run checks"
        id: "run-checks"
        run: "pipenv run make check"
