# dart-daap-client
# .github/workflows/check-requirements.yml


name: check-requirements
on:
  push:
    branches:
      - "*"
    tags:
      - "*"
  pull_request:
    branches:
      - "*"
  schedule:
    - cron: "0 3 * * *"
  workflow_dispatch:
env:
  DEFAULT_PYTHON_VERSION: "3.10"
  DART_VERSION: "stable"
jobs:
  check-requirements:
    name: check-requirements
    runs-on: ubuntu-latest
    steps:
      - name: Git clone
        uses: actions/checkout@v2
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Pipenv cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pipenv
          key: ${{ runner.os }}-pipenv-${{ hashFiles('Pipfile') }}
          restore-keys: |
            ${{ runner.os }}-pipenv-
      - name: Set up Dart ${{ env.DART_VERSION }}
        uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ env.DART_VERSION }}
      - name: Pub cache
        uses: actions/cache@v2
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-${{ hashFiles('pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-
      - name: Install dependencies
        run: |
          pip install pipenv
          make pipenv-install
          make pub-install
      - name: Check Python outdated requirements
        continue-on-error: true
        run: pipenv update --outdated
      - name: Check Dart outdated requirements
        continue-on-error: true
        run: pub outdated
