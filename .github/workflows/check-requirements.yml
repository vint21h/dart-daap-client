name: "check-requirements"
on:
  schedule:
    - cron: "0 3 * * *"
  workflow_dispatch:
  workflow_call:
env:
  DEFAULT_PYTHON_VERSION: "3.11"
  DEFAULT_DART_VERSION: "stable"
jobs:
  check-requirements:
    name: "check-requirements"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Git clone"
        id: "git-clone"
        uses: "actions/checkout@v3.5.1"
      - name: "Set up Python ${{ env.PYTHON_VERSION }}"
        id: "set-up-python"
        uses: "actions/setup-python@v4.5.0"
        with:
          python-version: "${{ env.DEFAULT_PYTHON_VERSION }}"
      - name: "Pipenv cache"
        id: "pipenv-cache"
        uses: "actions/cache@v3.2.5"
        with:
          path: "~/.cache/pipenv"
          key: "${{ runner.os }}-pipenv-${{ hashFiles('Pipfile') }}"
          restore-keys: |
            "${{ runner.os }}-pipenv-"
      - name: "Set up Dart ${{ env.DEFAULT_DART_VERSION }}"
        id: "set-up-dart"
        uses: "dart-lang/setup-dart@v1.4"
        with:
          sdk: "${{ env.DEFAULT_DART_VERSION }}"
      - name: "Pub cache"
        id: "pub-cache"
        uses: "actions/cache@v3.2.5"
        with:
          path: "~/.pub-cache"
          key: "${{ runner.os }}-${{ hashFiles('pubspec.yaml') }}"
          restore-keys: |
            "${{ runner.os }}-pub-"
      - name: "Install requirements"
        id: "install-requirements"
        run: |
          pip install pipenv
          make pipenv-install
          make pub-install
      - name: "Check Python outdated requirements"
        id: "check-python-outdated-requirents"
        continue-on-error: true
        run: "pipenv update --outdated"
      - name: "Check Dart outdated requirements"
        id: "check-dart-outdated-requirements"
        continue-on-error: true
        run: "dart pub outdated"
